var groundhog = groundhog || {};

groundhog.config = {
	articleType : {
		"评测" : 1,
		"资讯" : 2,
		"攻略" : 3,
		"视频" : 4
	},

	articleContentType : {
		"原创" : 1,
		"转载" : 2
	},

	statType : {
		pv : 1,
		light : 2,
		dl : 3,
		down : 4,
		store : 5
	},

	objectType : {
		game : 1,
		article : 2,
		article_group : 3,
		game_group : 4,
		tag : 5,
		h5game : 8
	},

	platformType : {
		android : 1,
		ios : 2,
		wp : 3,
		all : 100
	},

	adminUrl : "http://admin.tuboshu.duowan.com",

	// webUrl : "http://test.lua.com"
	webUrl : "http://www.5253.com"

};

// ======================= 统计模块 ==============================

groundhog.stat = groundhog.stat || {};

/*
 * require kk.js
 */
groundhog.stat.recordOnce = function(st, ot, pt, oid, callback) {
	if (!oid) {
		return false;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}

	// avoid
	var cookieName = "groundhog_stat_" + st + "_" + ot + "_" + pt + "_" + oid;
	var cookieValue = kk.browser.getCookie(cookieName);

	// 赞、踩、收藏
	if (st == 2 || st == 4) {
		if (cookieValue) {
			return false;
		}
	}

	var data = {
		"st" : st,
		"ot" : ot,
		"pt" : pt,
		"oid" : oid,
		"t" : (new Date().getTime())
	};

	var url = groundhog.config.webUrl + "/stat";

	$.get(url, data, function() {
		return true;
	}, 'json');

	if (st == 2 || st == 4) {
		// set cookie
		kk.browser.setCookie(cookieName, "1", 1);
	}

	if (callback && typeof (callback) == 'function') {
		callback();
	}

	return true;
};

groundhog.stat.recordOnceCd = function(st, ot, pt, oid) {
	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}

	var data = {
		"st" : st,
		"ot" : ot,
		"pt" : pt,
		"oid" : oid
	};

	var url = groundhog.config.webUrl + "/stat";

	$.get(url, data, function() {
		return true;
	}, "jsonp");
};

/**
 * 查询 total
 */
groundhog.stat.queryTotal = function(st, ot, pt, oid, recal, handler) {
	if (!oid)
		return;

	isNaN(st) ? (st = groundhog.config.statType[st]) : null;
	isNaN(ot) ? (ot = groundhog.config.objectType[ot]) : null;
	isNaN(pt) ? (pt = groundhog.config.platformType[pt]) : null;
	(recal === undefined) ? (recal = false) : null;

	var data = {
		"st" : st,
		"ot" : ot,
		"pt" : pt,
		"oid" : oid,
		"recal" : recal,
		"t" : (new Date().getTime())
	};

	var url = groundhog.config.webUrl + "/stat/query/total";

	$.get(url, data, function(rtnObj) {
		// console.log("rtnObj",JSON.stringify(rtnObj));
		var rs = rtnObj.data.result;
		if (rs == "success") {
			var total = rtnObj.data.total;

			if (handler && $.isFunction(handler)) {
				handler(total);
			}
		}

		return true;
	}, "json");

	// for test
	// handler(5);

};

groundhog.stat.checkCookie = function(st, ot, pt, oid, callback) {
	if (!oid) {
		return;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}

	var cookieName = "groundhog_stat_" + st + "_" + ot + "_" + pt + "_" + oid;
	var cookieValue = kk.browser.getCookie(cookieName);

	if (cookieValue) {
		if (callback && typeof (callback) == 'function') {
			callback();
		}
	}

};

groundhog.stat.clearCookie = function(st, ot, pt, oid) {
	if (!oid) {
		return;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}
	var cookieName = "groundhog_stat_" + st + "_" + ot + "_" + pt + "_" + oid;
	kk.browser.setCookie(cookieName, "1", -1);
}

groundhog.stat.getCookieValue = function(st, ot, pt, oid) {
	if (!oid) {
		return;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}
	var cookieName = "groundhog_stat_" + st + "_" + ot + "_" + pt + "_" + oid;
	var cookieValue = kk.browser.getCookie(cookieName);
	return cookieValue;
}

groundhog.stat.clearCookieValue = function(st, ot, pt, oid) {
	if (!oid) {
		return;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}
	var cookieName = "groundhog_stat_" + st + "_" + ot + "_" + pt + "_" + oid;
	var cookieValue = kk.browser.setCookie(cookieName);
	return cookieValue;
}

groundhog.stat.checkUserStore = function(ot, pt, oid, sot, callback) {
	if (!ot || !pt || !oid) {
		return;
	}
	if (!sot) {
		sot = 0;
	}
	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}

	var url = groundhog.config.webUrl + "/user/store/checkUserStore_json";
	var data = {
		"ot" : ot,
		"pt" : pt,
		"oid" : oid,
		"sot" : sot,
		"t" : (new Date().getTime())
	};

	$.get(url, data, function(data) {
		var data = eval("(" + data + ")");
		if (data.status == 3) {
			if (callback && typeof (callback) == 'function') {
				callback();
			}
		}
	});

}

groundhog.stat.update = function(inputNamePrefix, st, ot, pt, oid) {
	if (!oid) {
		return;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}

	dayCount = $("input[name='" + inputNamePrefix + ".dayCount']").val();
	if (!dayCount || isNaN(dayCount)) {
		dayCount = 0;
	}

	var data = {
		"st" : st,
		"ot" : ot,
		"pt" : pt,
		"oid" : oid,
		"dayCount" : dayCount
	};

	var url = groundhog.config.adminUrl + "/stat/update";

	$.get(url, data, function(rtnObj) {
		// console.log("rtnObj",JSON.stringify(rtnObj));
		var rs = rtnObj.data.result;
		if (rs == "success") {
			$("input[name='" + inputNamePrefix + ".weekCount']").val(
					rtnObj.data.stat.weekCount);
			$("input[name='" + inputNamePrefix + ".totalCount']").val(
					rtnObj.data.stat.totalCount);
		} else {
			alert("修改失败！");
		}
		return true;
	}, "json");
};

/**
 * 加载统计数据
 * 
 * @param {Object}
 *            inputNamePrefix
 * @param {Object}
 *            st statType
 * @param {Object}
 *            ot objectType
 * @param {Object}
 *            pt platformType
 * @param {Object}
 *            oid objectId
 */
groundhog.stat.load = function(inputNamePrefix, st, ot, pt, oid) {
	if (!oid) {
		return;
	}

	if (isNaN(st)) {
		st = groundhog.config.statType[st];
	}

	if (isNaN(ot)) {
		ot = groundhog.config.objectType[ot];
	}

	if (isNaN(pt)) {
		pt = groundhog.config.platformType[pt];
	}

	dayCount = $("input[name='" + inputNamePrefix + ".dayCount']").val();
	if (!dayCount || isNaN(dayCount)) {
		dayCount = 0;
	}

	var data = {
		"st" : st,
		"ot" : ot,
		"pt" : pt,
		"oid" : oid
	};

	var url = groundhog.config.adminUrl + "/stat/query";

	$.get(url, data, function(rtnObj) {
		// console.log("rtnObj",JSON.stringify(rtnObj));
		var rs = rtnObj.data.result;
		if (rs == "success") {
			$("input[name='" + inputNamePrefix + ".dayCount']").val(
					rtnObj.data.stat.dayCount);
			$("input[name='" + inputNamePrefix + ".weekCount']").val(
					rtnObj.data.stat.weekCount);
			$("input[name='" + inputNamePrefix + ".totalCount']").val(
					rtnObj.data.stat.totalCount);
		} else {

		}
		return true;
	}, "json");
};

groundhog.stat.trackEvent = function(category, action, opt_label, opt_value) {
	try {
		if (!opt_value) {
			opt_value = null;
		}

		// baidu statistic
		if (window['_hmt'] != null && _hmt != undefined && _hmt) {
			_hmt
					.push([ '_trackEvent', category, action, opt_label,
							opt_value ]);
		}

		// google statistic
		if (window['ga'] != null && ga != undefined && ga) {
			ga('send', 'event', category, action, opt_label, opt_value);
		}

	} catch (e) {

	}
	return true;
};

groundhog.stat.recordSearchKey = function(key, opt_isGame, opt_isArticle) {
	try {
		if (key == null) {
			return;
		}
		var data = {
			"key" : key,
			"isGame" : opt_isGame,
			"isArticle" : opt_isArticle
		};

		var url = groundhog.config.webUrl + "/record/search_key";

		$.get(url, data, function(e) {
			return true;
		}, "json");

	} catch (e) {

	}
	return true;
};

// ======================= 游戏公用 模块 ==============================
groundhog.game = groundhog.game || {};

/**
 * 游戏下载渠道触发方法配置 key:下载渠道channelId
 */
groundhog.game.downloadConfig = {
	/* 豌豆荚触发下载 */
	"12" : function(ele) {
		if (wdapi_apkdl) {
			return wdapi_apkdl(ele);
		}
	},
	/* 腾讯应用宝触发下载 */
	"13" : function(ele) {
		if (qqapp_dl_apk) {
			qqapp_dl_apk(ele);
		}
	},
	/* 360手机助手触发下载什么都不做 */
	"11" : function(ele) {
		return;
	},
	/* 其他默认下载触发 */
	"1" : function(ele) {
		var dataUrl = $(ele).attr("data-url");
		if (dataUrl && dataUrl != '') {
			var target = $(ele).attr("target");
			if (target && target == '_blank') {
				kk.browser.open(dataUrl);
			} else {
				if (dataUrl.toLowerCase().indexOf("javascript") == 0) {
					var dl_url = dataUrl.substring(
							dataUrl.indexOf("apk^=^") + 6, dataUrl
									.indexOf("^&^image"));
					var encode_dl_url = dl_url.replace("'", "\\'");
					var re_dataUrl = dataUrl.replace(dl_url, encode_dl_url);
					eval(re_dataUrl);
				} else {
					// 改为新窗口打开，避免页面请求未发送，导致页面的url被刷
					// window.location.href = dataUrl;
					kk.browser.open(dataUrl);
				}
			}
		}
	}
};

/**
 * 游戏下载统计 channel : 下载渠道，见后台下载渠道管理模块
 */
groundhog.game.download = function(ele, params, callback) {
	// 默认参数
	var defaultParams = {
		"present" : "json",
		"t" : (new Date().getTime())
	};
	// 参数合并
	// var params = $.extend(defaultParams, params);
	// 异步发送渠道统计请求
	var url = groundhog.config.webUrl + "/game/download";
	url += "/" + params.gameId + "/" + params.platformType + "-"
			+ params.packageType + "-" + params.channel + "-" + params.method;
	$.get(url, defaultParams, function(rtnObj) {
		if (rtnObj.status == 200) {
			return true;
		}
		return false;
	}, "json");

	// 取默认的触发处理方法
	var method = params.method;
	var clickMethod = groundhog.game.downloadConfig["1"];
	if (groundhog.game.downloadConfig[method]) {
		clickMethod = groundhog.game.downloadConfig[method];
	}
	eval(clickMethod)(ele);
	// 调用业务入口的回调函数，如网站游戏详情页，需要回显下载次数
	if (callback && $.isFunction(callback)) {
		callback();
	}
};

// ======================= util 模块 ==============================
groundhog.util = groundhog.util || {};

groundhog.util.getCursortPosition = function(ctrl) {
	var CaretPos = 0;
	// IE Support
	if (document.selection) {
		ctrl.focus();
		var Sel = document.selection.createRange();
		Sel.moveStart('character', -ctrl.value.length);
		CaretPos = Sel.text.length;
	}
	// Firefox support
	else if (ctrl.selectionStart || ctrl.selectionStart == '0')
		CaretPos = ctrl.selectionStart;
	return (CaretPos);
};

groundhog.util.setCaretPosition = function(ctrl, pos) {
	if (ctrl.setSelectionRange) {
		ctrl.focus();
		ctrl.setSelectionRange(pos, pos);
	} else if (ctrl.createTextRange) {
		var range = ctrl.createTextRange();
		range.collapse(true);
		range.moveEnd('character', pos);
		range.moveStart('character', pos);
		range.select();
	}
};

groundhog.util.addToFav = function() {
	var sURL = "http://www.tuboshu.com";
	var sTitle = "土拨鼠手游TuBoShu.com";
	try {
		window.external.addFavorite(sURL, sTitle);
	} catch (e) {
		try {
			window.sidebar.addPanel(sTitle, sURL, "");
		} catch (e) {
			alert("您的浏览器不支持该功能,请使用Ctrl+D收藏本页");
		}
	}
};

groundhog.util.saveToDesktop = function() {
	var sURL = "http://www.tuboshu.com";
	var sTitle = "土拨鼠手游TuBoShu.com";
	try {
		window.external.addFavorite(sURL, sTitle);
	} catch (e) {
		try {
			window.sidebar.addPanel(sTitle, sURL, "");
		} catch (e) {
			alert("您的浏览器不支持该功能,请使用Ctrl+D收藏本页");
		}
	}
};
/**
 * 是否土拨鼠域名.
 * @returns {Boolean}
 */
groundhog.util.isTuboshu = function() {
	return window.location.hostname.indexOf("tuboshu.com") >= 0;
};
/**
 * 是否5253域名.
 * @returns {Boolean}
 */
groundhog.util.is5253 = function() {
	return window.location.hostname.indexOf("5253.com") >= 0;
};
/**
 * 格式化数量
 */
groundhog.util.formatTotalCount = function(totalCount, scale) {
	if (typeof (totalCount) != 'number') {
		return totalCount;
	}
	var defaultScale = 1;
	var result = totalCount;
	if (scale) {
		defaultScale = scale;
	}
	if (totalCount >= 100000000) {
		var value = totalCount / 100000000;
		var pow = Math.pow(10, defaultScale);
		var res = Math.round(value * pow) / pow;
		result = res + '亿';
	} else if (totalCount >= 10000) {
		var value = totalCount / 10000;
		var pow = Math.pow(10, defaultScale);
		var res = Math.round(value * pow) / pow;
		result = res + '万';
	}
	return result;
};

/**
 * 判断是否ie 6.
 */
groundhog.util.isIESix = function() {
	return /MSIE 6.0/.test(navigator.userAgent);
};

/**
 * 判断是否ie .
 */
groundhog.util.isIE = function() {
	return /MSIE/.test(navigator.userAgent);
};
/**
 * 获取字符串真实长度.
 */
groundhog.util.len_chinese = function(s) {
	var l = 0;
	var a = s.split("");
	for (var i = 0; i < a.length; i++) {
		if (/[\u4e00-\u9fa5]/.test(a[i])) {
			l += 2;
		} else {
			l++;
		}
	}
	return l;
};
/**
 * 根据字符串真是长度截取字符串.
 */
groundhog.util.cut_str = function(s, length) {
	var l = 0;
	var a = s.split("");
	var index = 0;
	for (var i = 0; i < length; i++) {
		if (/[\u4e00-\u9fa5]/.test(a[i])) {
			i = i + 1;
		}
		index = index + 1;
	}
	var sub_str = s.substr(0, index);
	return sub_str;
};

groundhog.util.namespace = {};
/**
 * 注册js package的方法.
 */
groundhog.util.namespace.register = function() {
	if (typeof (ns) != "string")
		return;
	ns = ns.split(".");
	var o, ni;
	for (var i = 0, len = ns.length; i < len, ni = ns[i]; i++) {
		try {
			o = (o ? (o[ni] = o[ni] || {}) : (eval(ni + "=" + ni + "||{}")))
		} catch (e) {
			o = eval(ni + "={}")
		}
	}
};
// 写cookie 有效期一天
groundhog.util.setCookie = function(sName, sValue, cusExpires) {
	var date = null;
	if (cusExpires instanceof Date) {
		// 自定义失效时间
		date = cusExpires;
	} else {
		// 默认一天失效
		date = new Date();
		date.setDate(date.getDate() + 1);
	}
	document.cookie = sName + "=" + escape(sValue) + "; expires="
			+ date.toGMTString() + ';domain=tuboshu.com;path=/';
}
// 读取cookie
groundhog.util.getCookie = function(sName) {
	var aCookie = document.cookie.split("; ");
	for (var i = 0; i < aCookie.length; i++) {
		var aCrumb = aCookie[i].split("=");
		if (sName == aCrumb[0])
			return unescape(aCrumb[1]);
	}
	return null;
}
// 删除cookie
groundhog.util.delCookie = function(name) {
	var exp = new Date();
	exp.setTime(exp.getTime() - 1);
	var cval = groundhog.util.getCookie(name);
	if (cval != null) {
		document.cookie = name + "=" + cval + ";expires=" + exp.toGMTString()
				+ ';domain=tuboshu.com;path=/';
		;
	}
}
/**
 * 提示框公用方法。
 */
groundhog.util.artDialogTips = function(content, time, islock, init, close) {
	var hasCancel = false;
	var hasLock = true;
	if (time && time > 5) {
		hasCancel = true;
	}
	if (islock == false) {
		hasLock = false;
	}

	return art.dialog({
		init : init,
		close : close,
		id : 'Tips',
		width : '300px',
		title : false,
		cancel : hasCancel,
		fixed : true,
		lock : hasLock
	}).content('<div style="padding: 0 1em;">' + content + '</div>').time(
			time || 1.5);
};
// ======================= 全站的通用函数 ==============================

groundhog.page = groundhog.page || {};

groundhog.page.config = {
	index_searchFocusText : "搜索一下,更多精彩",
	index_searchBlurText : "输入您想要的游戏..."
};

groundhog.page.common = groundhog.page.common || {};

// 首页的初始化
groundhog.page.common.init = function() {
	var pageController = {
		// nav bar控制函数.
		scrollNavBarHandler : (function() {
			var scrollNavShow = false;
			var primaryNavDiv = $("#primary-nav-div");
			var scrollNavDiv = $("#scroll-nav-div");
			// 由于有双搜索栏,需要同步搜索栏的状态.
			var handleSearchInputState = function() {
				var editing_input = $(".hasValue");
				if (editing_input.length > 0) {
					var fulltextsearch_inputs = $('.fulltextsearch_input');
					fulltextsearch_inputs.val(editing_input.val());
					fulltextsearch_inputs.css("color", editing_input
							.css("color"));
				}
			};
			return function() {
				var currentScrollTop = $(window).scrollTop();
				var priNavHeight = primaryNavDiv.height();
				if (currentScrollTop > priNavHeight && !scrollNavShow) {
					scrollNavDiv.css("display", "block");
					scrollNavShow = true;
					handleSearchInputState();
				} else if (currentScrollTop <= priNavHeight && scrollNavShow) {
					scrollNavDiv.css("display", "none");
					scrollNavShow = false;
					handleSearchInputState();
				}
			};
		})(),
		// 搜索控件状态控制函数.
		searchInputHandler : function() {
			$(".full_search-btn").click(
					function() {
						var _that = $(this);
						var searchKey = '';
						var searchText = _that
								.siblings('.fulltextsearch_input');
						var value = searchText.val().trim();
						if (value === null || value === '') {
							$('.fulltextsearch_input').css("position",
									"relative").animate({
								left : "-10px"
							}, 80).animate({
								left : "10px"
							}, 80).animate({
								left : "-10px"
							}, 80).animate({
								left : "10px"
							}, 80).animate({
								left : "0px"
							}, 80);
							return;
						}
						window.open("http://" + window.location.host
								+ "/search.html?searchKey=" + encodeURI(value),
								"_self");
					});
			$('.fulltextsearch_input').keypress(function(event) {
				var _that = $(this);
				if (event.keyCode == 13) {
					_that.blur();
					_that.siblings(".full_search-btn").click();
				}
			});
		},
		// 回到顶部方法.
		initGoToTop : function() {
			$("#go-top,.rank-gotop").click(function() {
				$("html, body").animate({
					scrollTop : 0
				}, 120);
			});
			var scrollerHandler = function() {
				var st = $(document).scrollTop();
				var winh = $(window).height();
				(st > 0) ? $("#go-top,.rank-gotop").show() : $(
						"#go-top,.rank-gotop").hide();

				// IE6下的定位
				if (!window.XMLHttpRequest) {
					$("#go-top,.rank-gotop").css("top", st + winh - 60);
				}
			};
			//初始化go to top控件。
			scrollerHandler();
			$(window).bind("scroll", scrollerHandler);
		},
		/**
		 * 新版导航条active状态调整。
		 */
		initNavStatus : function() {
			// 顶部导航条hover效果使用js实现,由于IE不支持css hover伪类问题。
			$(".navtxt").hover(function() {
				$(this).children().css("display", "block");

			}, function() {
				$(this).children().css("display", "none");
			});
			// 新版导航条选中效果处理
			var currentHref = window.location.href;
			var curPathname = window.location.pathname;
			$(".tbs-nav ul li").each(
					function() {
						var _that = $(this);
						var pathname = _that.find("a").attr("href-data");
						var _href = "http://www.tuboshu.com"
								+ _that.find("a").attr("href-data");
						if (curPathname === "/" && pathname === "/") {
							_that.addClass("on");
							return false;
						} else if (pathname !== "/"
								&& curPathname.indexOf(pathname) == 0) {
							_that.addClass("on");
							return false;
						} else if (curPathname.indexOf("/game/") == 0) {// 兼容处理
							// http://www.tuboshu.com/game/list-2-0-0-0-createTime.html
							if (pathname == '/android'
									&& curPathname.indexOf("/list-1") > 0) {
								_that.addClass("on");
								return false;
							} else if (pathname == '/ios'
									&& curPathname.indexOf("/list-2") > 0) {
								_that.addClass("on");
								return false;
							}
						}
						return true;
					});
		},
		// 页面初始方法
		init : function() {
			// $(window).scroll(this.scrollNavBarHandler);
			this.searchInputHandler();
			this.initGoToTop();
			this.initNavStatus();
			
			$(".navpindao .tag").hover(function(){
				$(".floatpdnav").hide();
				$(".floatpdnav",this).show();
			},function(){
				$(".floatpdnav",this).hide();
				$(".tag_on").find(".floatpdnav").show();
			});
			
			$(".top523 .fnav").hover(function(){
				$(this).siblings(".floatnav").show();
			},function(){
				$(this).siblings(".floatnav").hide();
			});
			$(".top523 .floatnav").hover(function(){
				$(this).show();
				$(this).siblings(".fnav").addClass("fnav-on");
			},function(){
				$(this).hide();
				$(this).siblings(".fnav").removeClass("fnav-on");
			});
			
			
			// 导航条详细导航显示
			$('.small-nav .top-nav2 .s-nav').hover(function() {
				$(".small-nav .top-nav2 .s-nav .s-nav-box").show();
			}, function() {
				$(".small-nav .top-nav2 .s-nav .s-nav-box").hide();
			});
			if (groundhog.util.isIE()) {
				String.prototype.trim = function() {
					return this.replace(/^\s+|\s+$/g, "");
				};
				String.prototype.ltrim = function() {
					return this.replace(/^\s+/, "");
				};
				String.prototype.rtrim = function() {
					return this.replace(/\s+$/, "");
				};
			}
			// ie固定footer 问题.
			if (groundhog.util.isIESix()) {
				$("#footer-container").css("zoom", "1");
				var container_innerhtml = $('#container')[0].innerHTML;
				// 监控界面元素改变.
				(function(previousInnerHTML) {
					return function() {
						if ($('#container')[0].innerHTML !== previousInnerHTML) {
							$("#container").css("zoom", "1");
							$("#container")
									.height($("#container").height() + 0);
							previousInnerHTML = $('#container')[0].innerHTML;
						}
						setTimeout(arguments.callee, 10);
					};
				})(container_innerhtml)();
			}
			// 图片hover效果添加
			$('.pic-new img').after('<em class="lightning"></em>');
			$('.pic-new').hover(function() {
				$('em.lightning', this).stop().animate({
					left : '300px'
				}, 800);
			}, function() {
				$('em.lightning', this).stop().css({
					left : '-150px'
				});
			});
			//placeholder初始化
			$("input[placeholder]").placeholder();
		}
	};
	pageController.init();
};
;
/*!
 * jquery.scrollLoading.js
 * by zhangxinxu  http://www.zhangxinxu.com
 * 2010-11-19 v1.0
 * 2012-01-13 v1.1 偏移值计算修改 position → offset
 * 2012-09-25 v1.2 增加滚动容器参数, 回调参数
*/
(function(a){a.fn.scrollLoading=function(b){var c={attr:"data-url",container:a(window),callback:a.noop};var d=a.extend({},c,b||{});d.cache=[];a(this).each(function(){var h=this.nodeName.toLowerCase(),g=a(this).attr(d.attr);var i={obj:a(this),tag:h,url:g};d.cache.push(i)});var f=function(g){if(a.isFunction(d.callback)){d.callback.call(g.get(0))}};var e=function(){var g=d.container.height();if(a(window).get(0)===window){contop=a(window).scrollTop()}else{contop=d.container.offset().top}a.each(d.cache,function(m,n){var p=n.obj,j=n.tag,k=n.url,l,h;if(p){l=p.offset().top-contop,l+p.height();if((l>=0&&l<g)||(h>0&&h<=g)){if(k){if(j==="img"){f(p.attr("src",k))}else{p.load(k,{},function(){f(p)})}}else{f(p)}n.obj=null}}})};e();d.container.bind("scroll",e)}})(jQuery);;
/*
 * SimpleModal 1.4.4 - jQuery Plugin
 * http://simplemodal.com/
 * Copyright (c) 2013 Eric Martin
 * Licensed under MIT and GPL
 * Date: Sun, Jan 20 2013 15:58:56 -0800
 */
(function(factory){if(typeof define==="function"&&define.amd){define(["jquery"],factory)}else{factory(jQuery)}}(function($){var d=[],doc=$(document),ua=navigator.userAgent.toLowerCase(),wndw=$(window),w=[];var browser={ieQuirks:null,msie:/msie/.test(ua)&&!/opera/.test(ua),opera:/opera/.test(ua)};browser.ie6=browser.msie&&/msie 6./.test(ua)&&typeof window["XMLHttpRequest"]!=="object";browser.ie7=browser.msie&&/msie 7.0/.test(ua);$.modal=function(data,options){return $.modal.impl.init(data,options)};$.modal.close=function(){$.modal.impl.close()};$.modal.focus=function(pos){$.modal.impl.focus(pos)};$.modal.setContainerDimensions=function(){$.modal.impl.setContainerDimensions()};$.modal.setPosition=function(){$.modal.impl.setPosition()};$.modal.update=function(height,width){$.modal.impl.update(height,width)};$.fn.modal=function(options){return $.modal.impl.init(this,options)};$.modal.defaults={appendTo:"body",focus:true,opacity:50,overlayId:"simplemodal-overlay",overlayCss:{},containerId:"simplemodal-container",containerCss:{},dataId:"simplemodal-data",dataCss:{},minHeight:null,minWidth:null,maxHeight:null,maxWidth:null,autoResize:false,autoPosition:true,zIndex:1000,close:true,closeHTML:'<a class="modalCloseImg" title="Close"></a>',closeClass:"simplemodal-close",escClose:true,overlayClose:false,fixed:true,position:null,persist:false,modal:true,onOpen:null,onShow:null,onClose:null};$.modal.impl={d:{},init:function(data,options){var s=this;if(s.d.data){return false}browser.ieQuirks=browser.msie&&(document.compatMode==="BackCompat");s.o=$.extend({},$.modal.defaults,options);s.zIndex=s.o.zIndex;s.occb=false;if(typeof data==="object"){data=data instanceof $?data:$(data);s.d.placeholder=false;if(data.parent().parent().size()>0){data.before($("<span></span>").attr("id","simplemodal-placeholder").css({display:"none"}));s.d.placeholder=true;s.display=data.css("display");if(!s.o.persist){s.d.orig=data.clone(true)}}}else{if(typeof data==="string"||typeof data==="number"){data=$("<div></div>").html(data)}else{alert("SimpleModal Error: Unsupported data type: "+typeof data);return s}}s.create(data);data=null;s.open();if($.isFunction(s.o.onShow)){s.o.onShow.apply(s,[s.d])}return s},create:function(data){var s=this;s.getDimensions();if(s.o.modal&&browser.ie6){s.d.iframe=$('<iframe src="javascript:false;"></iframe>').css($.extend(s.o.iframeCss,{display:"none",opacity:0,position:"fixed",height:w[0],width:w[1],zIndex:s.o.zIndex,top:0,left:0})).appendTo(s.o.appendTo)}s.d.overlay=$("<div></div>").attr("id",s.o.overlayId).addClass("simplemodal-overlay").css($.extend(s.o.overlayCss,{display:"none",opacity:s.o.opacity/100,height:s.o.modal?d[0]:0,width:s.o.modal?d[1]:0,position:"fixed",left:0,top:0,zIndex:s.o.zIndex+1})).appendTo(s.o.appendTo);s.d.container=$("<div></div>").attr("id",s.o.containerId).addClass("simplemodal-container").css($.extend({position:s.o.fixed?"fixed":"absolute"},s.o.containerCss,{display:"none",zIndex:s.o.zIndex+2})).append(s.o.close&&s.o.closeHTML?$(s.o.closeHTML).addClass(s.o.closeClass):"").appendTo(s.o.appendTo);s.d.wrap=$("<div></div>").attr("tabIndex",-1).addClass("simplemodal-wrap").css({height:"100%",outline:0,width:"100%"}).appendTo(s.d.container);s.d.data=data.attr("id",data.attr("id")||s.o.dataId).addClass("simplemodal-data").css($.extend(s.o.dataCss,{display:"none"})).appendTo("body");data=null;s.setContainerDimensions();s.d.data.appendTo(s.d.wrap);if(browser.ie6||browser.ieQuirks){s.fixIE()}},bindEvents:function(){var s=this;$("."+s.o.closeClass).bind("click.simplemodal",function(e){e.preventDefault();s.close()});if(s.o.modal&&s.o.close&&s.o.overlayClose){s.d.overlay.bind("click.simplemodal",function(e){e.preventDefault();s.close()})}doc.bind("keydown.simplemodal",function(e){if(s.o.modal&&e.keyCode===9){s.watchTab(e)}else{if((s.o.close&&s.o.escClose)&&e.keyCode===27){e.preventDefault();s.close()}}});wndw.bind("resize.simplemodal orientationchange.simplemodal",function(){s.getDimensions();s.o.autoResize?s.setContainerDimensions():s.o.autoPosition&&s.setPosition();if(browser.ie6||browser.ieQuirks){s.fixIE()}else{if(s.o.modal){s.d.iframe&&s.d.iframe.css({height:w[0],width:w[1]});s.d.overlay.css({height:d[0],width:d[1]})}}})},unbindEvents:function(){$("."+this.o.closeClass).unbind("click.simplemodal");doc.unbind("keydown.simplemodal");wndw.unbind(".simplemodal");this.d.overlay.unbind("click.simplemodal")},fixIE:function(){var s=this,p=s.o.position;$.each([s.d.iframe||null,!s.o.modal?null:s.d.overlay,s.d.container.css("position")==="fixed"?s.d.container:null],function(i,el){if(el){var bch="document.body.clientHeight",bcw="document.body.clientWidth",bsh="document.body.scrollHeight",bsl="document.body.scrollLeft",bst="document.body.scrollTop",bsw="document.body.scrollWidth",ch="document.documentElement.clientHeight",cw="document.documentElement.clientWidth",sl="document.documentElement.scrollLeft",st="document.documentElement.scrollTop",s=el[0].style;s.position="absolute";if(i<2){s.removeExpression("height");
s.removeExpression("width");s.setExpression("height",""+bsh+" > "+bch+" ? "+bsh+" : "+bch+' + "px"');s.setExpression("width",""+bsw+" > "+bcw+" ? "+bsw+" : "+bcw+' + "px"')}else{var te,le;if(p&&p.constructor===Array){var top=p[0]?typeof p[0]==="number"?p[0].toString():p[0].replace(/px/,""):el.css("top").replace(/px/,"");te=top.indexOf("%")===-1?top+" + (t = "+st+" ? "+st+" : "+bst+') + "px"':parseInt(top.replace(/%/,""))+" * (("+ch+" || "+bch+") / 100) + (t = "+st+" ? "+st+" : "+bst+') + "px"';if(p[1]){var left=typeof p[1]==="number"?p[1].toString():p[1].replace(/px/,"");le=left.indexOf("%")===-1?left+" + (t = "+sl+" ? "+sl+" : "+bsl+') + "px"':parseInt(left.replace(/%/,""))+" * (("+cw+" || "+bcw+") / 100) + (t = "+sl+" ? "+sl+" : "+bsl+') + "px"'}}else{te="("+ch+" || "+bch+") / 2 - (this.offsetHeight / 2) + (t = "+st+" ? "+st+" : "+bst+') + "px"';le="("+cw+" || "+bcw+") / 2 - (this.offsetWidth / 2) + (t = "+sl+" ? "+sl+" : "+bsl+') + "px"'}s.removeExpression("top");s.removeExpression("left");s.setExpression("top",te);s.setExpression("left",le)}}})},focus:function(pos){var s=this,p=pos&&$.inArray(pos,["first","last"])!==-1?pos:"first";var input=$(":input:enabled:visible:"+p,s.d.wrap);setTimeout(function(){input.length>0?input.focus():s.d.wrap.focus()},10)},getDimensions:function(){var s=this,h=typeof window.innerHeight==="undefined"?wndw.height():window.innerHeight;d=[doc.height(),doc.width()];w=[h,wndw.width()]},getVal:function(v,d){return v?(typeof v==="number"?v:v==="auto"?0:v.indexOf("%")>0?((parseInt(v.replace(/%/,""))/100)*(d==="h"?w[0]:w[1])):parseInt(v.replace(/px/,""))):null},update:function(height,width){var s=this;if(!s.d.data){return false}s.d.origHeight=s.getVal(height,"h");s.d.origWidth=s.getVal(width,"w");s.d.data.hide();height&&s.d.container.css("height",height);width&&s.d.container.css("width",width);s.setContainerDimensions();s.d.data.show();s.o.focus&&s.focus();s.unbindEvents();s.bindEvents()},setContainerDimensions:function(){var s=this,badIE=browser.ie6||browser.ie7;var ch=s.d.origHeight?s.d.origHeight:browser.opera?s.d.container.height():s.getVal(badIE?s.d.container[0].currentStyle["height"]:s.d.container.css("height"),"h"),cw=s.d.origWidth?s.d.origWidth:browser.opera?s.d.container.width():s.getVal(badIE?s.d.container[0].currentStyle["width"]:s.d.container.css("width"),"w"),dh=s.d.data.outerHeight(true),dw=s.d.data.outerWidth(true);s.d.origHeight=s.d.origHeight||ch;s.d.origWidth=s.d.origWidth||cw;var mxoh=s.o.maxHeight?s.getVal(s.o.maxHeight,"h"):null,mxow=s.o.maxWidth?s.getVal(s.o.maxWidth,"w"):null,mh=mxoh&&mxoh<w[0]?mxoh:w[0],mw=mxow&&mxow<w[1]?mxow:w[1];var moh=s.o.minHeight?s.getVal(s.o.minHeight,"h"):"auto";if(!ch){if(!dh){ch=moh}else{if(dh>mh){ch=mh}else{if(s.o.minHeight&&moh!=="auto"&&dh<moh){ch=moh}else{ch=dh}}}}else{ch=s.o.autoResize&&ch>mh?mh:ch<moh?moh:ch}var mow=s.o.minWidth?s.getVal(s.o.minWidth,"w"):"auto";if(!cw){if(!dw){cw=mow}else{if(dw>mw){cw=mw}else{if(s.o.minWidth&&mow!=="auto"&&dw<mow){cw=mow}else{cw=dw}}}}else{cw=s.o.autoResize&&cw>mw?mw:cw<mow?mow:cw}s.d.container.css({height:ch,width:cw});s.d.wrap.css({overflow:(dh>ch||dw>cw)?"auto":"visible"});s.o.autoPosition&&s.setPosition()},setPosition:function(){var s=this,top,left,hc=(w[0]/2)-(s.d.container.outerHeight(true)/2),vc=(w[1]/2)-(s.d.container.outerWidth(true)/2),st=s.d.container.css("position")!=="fixed"?wndw.scrollTop():0;if(s.o.position&&Object.prototype.toString.call(s.o.position)==="[object Array]"){top=st+(s.o.position[0]||hc);left=s.o.position[1]||vc}else{top=st+hc;left=vc}s.d.container.css({left:left,top:top})},watchTab:function(e){var s=this;if($(e.target).parents(".simplemodal-container").length>0){s.inputs=$(":input:enabled:visible:first, :input:enabled:visible:last",s.d.data[0]);if((!e.shiftKey&&e.target===s.inputs[s.inputs.length-1])||(e.shiftKey&&e.target===s.inputs[0])||s.inputs.length===0){e.preventDefault();var pos=e.shiftKey?"last":"first";s.focus(pos)}}else{e.preventDefault();s.focus()}},open:function(){var s=this;s.d.iframe&&s.d.iframe.show();if($.isFunction(s.o.onOpen)){s.o.onOpen.apply(s,[s.d])}else{s.d.overlay.show();s.d.container.show();s.d.data.show()}s.o.focus&&s.focus();s.bindEvents()},close:function(){var s=this;if(!s.d.data){return false}s.unbindEvents();if($.isFunction(s.o.onClose)&&!s.occb){s.occb=true;s.o.onClose.apply(s,[s.d])}else{if(s.d.placeholder){var ph=$("#simplemodal-placeholder");if(s.o.persist){ph.replaceWith(s.d.data.removeClass("simplemodal-data").css("display",s.display))}else{s.d.data.hide().remove();ph.replaceWith(s.d.orig)}}else{s.d.data.hide().remove()}s.d.container.hide().remove();s.d.overlay.hide();s.d.iframe&&s.d.iframe.hide().remove();s.d.overlay.remove();s.d={}}}}}));;
/*! http://mths.be/placeholder v2.0.8 by @mathias */
;(function(window, document, $) {

	// Opera Mini v7 doesn’t support placeholder although its DOM seems to indicate so
	var isOperaMini = Object.prototype.toString.call(window.operamini) == '[object OperaMini]';
	var isInputSupported = 'placeholder' in document.createElement('input') && !isOperaMini;
	var isTextareaSupported = 'placeholder' in document.createElement('textarea') && !isOperaMini;
	var prototype = $.fn;
	var valHooks = $.valHooks;
	var propHooks = $.propHooks;
	var hooks;
	var placeholder;

	if (isInputSupported && isTextareaSupported) {

		placeholder = prototype.placeholder = function() {
			return this;
		};

		placeholder.input = placeholder.textarea = true;

	} else {

		placeholder = prototype.placeholder = function() {
			var $this = this;
			$this
				.filter((isInputSupported ? 'textarea' : ':input') + '[placeholder]')
				.not('.placeholder')
				.bind({
					'focus.placeholder': clearPlaceholder,
					'blur.placeholder': setPlaceholder
				})
				.data('placeholder-enabled', true)
				.trigger('blur.placeholder');
			return $this;
		};

		placeholder.input = isInputSupported;
		placeholder.textarea = isTextareaSupported;

		hooks = {
			'get': function(element) {
				var $element = $(element);

				var $passwordInput = $element.data('placeholder-password');
				if ($passwordInput) {
					return $passwordInput[0].value;
				}

				return $element.data('placeholder-enabled') && $element.hasClass('placeholder') ? '' : element.value;
			},
			'set': function(element, value) {
				var $element = $(element);

				var $passwordInput = $element.data('placeholder-password');
				if ($passwordInput) {
					return $passwordInput[0].value = value;
				}

				if (!$element.data('placeholder-enabled')) {
					return element.value = value;
				}
				if (value == '') {
					element.value = value;
					// Issue #56: Setting the placeholder causes problems if the element continues to have focus.
					if (element != safeActiveElement()) {
						// We can't use `triggerHandler` here because of dummy text/password inputs :(
						setPlaceholder.call(element);
					}
				} else if ($element.hasClass('placeholder')) {
					clearPlaceholder.call(element, true, value) || (element.value = value);
				} else {
					element.value = value;
				}
				// `set` can not return `undefined`; see http://jsapi.info/jquery/1.7.1/val#L2363
				return $element;
			}
		};

		if (!isInputSupported) {
			valHooks.input = hooks;
			propHooks.value = hooks;
		}
		if (!isTextareaSupported) {
			valHooks.textarea = hooks;
			propHooks.value = hooks;
		}

		$(function() {
			// Look for forms
			$(document).delegate('form', 'submit.placeholder', function() {
				// Clear the placeholder values so they don't get submitted
				var $inputs = $('.placeholder', this).each(clearPlaceholder);
				setTimeout(function() {
					$inputs.each(setPlaceholder);
				}, 10);
			});
		});

		// Clear placeholder values upon page reload
		$(window).bind('beforeunload.placeholder', function() {
			$('.placeholder').each(function() {
				this.value = '';
			});
		});

	}

	function args(elem) {
		// Return an object of element attributes
		var newAttrs = {};
		var rinlinejQuery = /^jQuery\d+$/;
		$.each(elem.attributes, function(i, attr) {
			if (attr.specified && !rinlinejQuery.test(attr.name)) {
				newAttrs[attr.name] = attr.value;
			}
		});
		return newAttrs;
	}

	function clearPlaceholder(event, value) {
		var input = this;
		var $input = $(input);
		if (input.value == $input.attr('placeholder') && $input.hasClass('placeholder')) {
			if ($input.data('placeholder-password')) {
				$input = $input.hide().next().show().attr('id', $input.removeAttr('id').data('placeholder-id'));
				// If `clearPlaceholder` was called from `$.valHooks.input.set`
				if (event === true) {
					return $input[0].value = value;
				}
				$input.focus();
			} else {
				input.value = '';
				$input.removeClass('placeholder');
				input == safeActiveElement() && input.select();
			}
		}
	}

	function setPlaceholder() {
		var $replacement;
		var input = this;
		var $input = $(input);
		var id = this.id;
		if (input.value == '') {
			if (input.type == 'password') {
				if (!$input.data('placeholder-textinput')) {
					try {
						$replacement = $input.clone().attr({ 'type': 'text' });
					} catch(e) {
						$replacement = $('<input>').attr($.extend(args(this), { 'type': 'text' }));
					}
					$replacement
						.removeAttr('name')
						.data({
							'placeholder-password': $input,
							'placeholder-id': id
						})
						.bind('focus.placeholder', clearPlaceholder);
					$input
						.data({
							'placeholder-textinput': $replacement,
							'placeholder-id': id
						})
						.before($replacement);
				}
				$input = $input.removeAttr('id').hide().prev().attr('id', id).show();
				// Note: `$input[0] != input` now!
			}
			$input.addClass('placeholder');
			$input[0].value = $input.attr('placeholder');
		} else {
			$input.removeClass('placeholder');
		}
	}

	function safeActiveElement() {
		// Avoid IE9 `document.activeElement` of death
		// https://github.com/mathiasbynens/jquery-placeholder/pull/99
		try {
			return document.activeElement;
		} catch (exception) {}
	}

}(this, document, jQuery));
;
/*! LAB.js (LABjs :: Loading And Blocking JavaScript)
    v2.0.3 (c) Kyle Simpson
    MIT License
*/
(function(o){var K=o.$LAB,y="UseLocalXHR",z="AlwaysPreserveOrder",u="AllowDuplicates",A="CacheBust",B="BasePath",C=/^[^?#]*\//.exec(location.href)[0],D=/^\w+\:\/\/\/?[^\/]+/.exec(C)[0],i=document.head||document.getElementsByTagName("head"),L=(o.opera&&Object.prototype.toString.call(o.opera)=="[object Opera]")||("MozAppearance"in document.documentElement.style),q=document.createElement("script"),E=typeof q.preload=="boolean",r=E||(q.readyState&&q.readyState=="uninitialized"),F=!r&&q.async===true,M=!r&&!F&&!L;function G(a){return Object.prototype.toString.call(a)=="[object Function]"}function H(a){return Object.prototype.toString.call(a)=="[object Array]"}function N(a,c){var b=/^\w+\:\/\//;if(/^\/\/\/?/.test(a)){a=location.protocol+a}else if(!b.test(a)&&a.charAt(0)!="/"){a=(c||"")+a}return b.test(a)?a:((a.charAt(0)=="/"?D:C)+a)}function s(a,c){for(var b in a){if(a.hasOwnProperty(b)){c[b]=a[b]}}return c}function O(a){var c=false;for(var b=0;b<a.scripts.length;b++){if(a.scripts[b].ready&&a.scripts[b].exec_trigger){c=true;a.scripts[b].exec_trigger();a.scripts[b].exec_trigger=null}}return c}function t(a,c,b,d){a.onload=a.onreadystatechange=function(){if((a.readyState&&a.readyState!="complete"&&a.readyState!="loaded")||c[b])return;a.onload=a.onreadystatechange=null;d()}}function I(a){a.ready=a.finished=true;for(var c=0;c<a.finished_listeners.length;c++){a.finished_listeners[c]()}a.ready_listeners=[];a.finished_listeners=[]}function P(d,f,e,g,h){setTimeout(function(){var a,c=f.real_src,b;if("item"in i){if(!i[0]){setTimeout(arguments.callee,25);return}i=i[0]}a=document.createElement("script");if(f.type)a.type=f.type;if(f.charset)a.charset=f.charset;if(h){if(r){e.elem=a;if(E){a.preload=true;a.onpreload=g}else{a.onreadystatechange=function(){if(a.readyState=="loaded")g()}}a.src=c}else if(h&&c.indexOf(D)==0&&d[y]){b=new XMLHttpRequest();b.onreadystatechange=function(){if(b.readyState==4){b.onreadystatechange=function(){};e.text=b.responseText+"\n//@ sourceURL="+c;g()}};b.open("GET",c);b.send()}else{a.type="text/cache-script";t(a,e,"ready",function(){i.removeChild(a);g()});a.src=c;i.insertBefore(a,i.firstChild)}}else if(F){a.async=false;t(a,e,"finished",g);a.src=c;i.insertBefore(a,i.firstChild)}else{t(a,e,"finished",g);a.src=c;i.insertBefore(a,i.firstChild)}},0)}function J(){var l={},Q=r||M,n=[],p={},m;l[y]=true;l[z]=false;l[u]=false;l[A]=false;l[B]="";function R(a,c,b){var d;function f(){if(d!=null){d=null;I(b)}}if(p[c.src].finished)return;if(!a[u])p[c.src].finished=true;d=b.elem||document.createElement("script");if(c.type)d.type=c.type;if(c.charset)d.charset=c.charset;t(d,b,"finished",f);if(b.elem){b.elem=null}else if(b.text){d.onload=d.onreadystatechange=null;d.text=b.text}else{d.src=c.real_src}i.insertBefore(d,i.firstChild);if(b.text){f()}}function S(c,b,d,f){var e,g,h=function(){b.ready_cb(b,function(){R(c,b,e)})},j=function(){b.finished_cb(b,d)};b.src=N(b.src,c[B]);b.real_src=b.src+(c[A]?((/\?.*$/.test(b.src)?"&_":"?_")+~~(Math.random()*1E9)+"="):"");if(!p[b.src])p[b.src]={items:[],finished:false};g=p[b.src].items;if(c[u]||g.length==0){e=g[g.length]={ready:false,finished:false,ready_listeners:[h],finished_listeners:[j]};P(c,b,e,((f)?function(){e.ready=true;for(var a=0;a<e.ready_listeners.length;a++){e.ready_listeners[a]()}e.ready_listeners=[]}:function(){I(e)}),f)}else{e=g[0];if(e.finished){j()}else{e.finished_listeners.push(j)}}}function v(){var e,g=s(l,{}),h=[],j=0,w=false,k;function T(a,c){a.ready=true;a.exec_trigger=c;x()}function U(a,c){a.ready=a.finished=true;a.exec_trigger=null;for(var b=0;b<c.scripts.length;b++){if(!c.scripts[b].finished)return}c.finished=true;x()}function x(){while(j<h.length){if(G(h[j])){try{h[j++]()}catch(err){}continue}else if(!h[j].finished){if(O(h[j]))continue;break}j++}if(j==h.length){w=false;k=false}}function V(){if(!k||!k.scripts){h.push(k={scripts:[],finished:true})}}e={script:function(){for(var f=0;f<arguments.length;f++){(function(a,c){var b;if(!H(a)){c=[a]}for(var d=0;d<c.length;d++){V();a=c[d];if(G(a))a=a();if(!a)continue;if(H(a)){b=[].slice.call(a);b.unshift(d,1);[].splice.apply(c,b);d--;continue}if(typeof a=="string")a={src:a};a=s(a,{ready:false,ready_cb:T,finished:false,finished_cb:U});k.finished=false;k.scripts.push(a);S(g,a,k,(Q&&w));w=true;if(g[z])e.wait()}})(arguments[f],arguments[f])}return e},wait:function(){if(arguments.length>0){for(var a=0;a<arguments.length;a++){h.push(arguments[a])}k=h[h.length-1]}else k=false;x();return e}};return{script:e.script,wait:e.wait,setOptions:function(a){s(a,g);return e}}}m={setGlobalDefaults:function(a){s(a,l);return m},setOptions:function(){return v().setOptions.apply(null,arguments)},script:function(){return v().script.apply(null,arguments)},wait:function(){return v().wait.apply(null,arguments)},queueScript:function(){n[n.length]={type:"script",args:[].slice.call(arguments)};return m},queueWait:function(){n[n.length]={type:"wait",args:[].slice.call(arguments)};return m},runQueue:function(){var a=m,c=n.length,b=c,d;for(;--b>=0;){d=n.shift();a=a[d.type].apply(null,d.args)}return a},noConflict:function(){o.$LAB=K;return m},sandbox:function(){return J()}};return m}o.$LAB=J();(function(a,c,b){if(document.readyState==null&&document[a]){document.readyState="loading";document[a](c,b=function(){document.removeEventListener(c,b,false);document.readyState="complete"},false)}})("addEventListener","DOMContentLoaded")})(this);;
;
$(function() {
	var currentDomain = null;
	if (groundhog.util.isTuboshu()) {
		currentDomain = "tuboshu.com";
	} else if (groundhog.util.is5253()) {
		currentDomain = "5253.com";
	}
	// 第三方依赖.
	if (!window.$LAB) {
		$('head')
				.append(
						$("<script src='http://www."
								+ currentDomain
								+ "/resources/js/lib/LAB.min.js' type='text/javascript'></script>"));
	}
	var logoutCY = function() {
		var img = new Image();
		img.src = 'http://changyan.sohu.com/api/2/logout?client_id=cyriHYEsj';
	}
	// UCenter 同步登陆的javascript执行.
	var renderUCScript = function(script, callback) {
		// 更新UC登陆信息 更新cookie
		var scripts = $(script);
		var length = scripts.length;
		if (length <= 0 && callback != null) {
			if (callback != null) {
				callback();
			}
		} else if (length > 0) {
			try {
				var doc = $(document.body);
				var load_scripts = [];
				for (var i = 0; i < length; i++) {
					load_scripts.push($(scripts[i]).attr("src"));
				}
				$LAB.script(load_scripts).wait(
						callback != null ? callback : function() {
						});
			} catch (e) {
				if (callback != null) {
					callback();
				}
			}

		}
	}
	// 读取登陆状态
	$.getJSON("http://www." + currentDomain
			+ "/oauth/userinfois?jsoncallback=?", {
		timeStamp : new Date().getTime()
	}, function(data) {
		if (data.result) {
			var user = data.user;
			if (user != null) {
				// 写用户id到cookie
				// groundhog.util.setCookie("tbsUserid", user.userId);
				// 个人主页链接
				var myWorkUrl = "http://www." + currentDomain + "/user/"
						+ user.userId;
				// 如果用户登陆成功
				// $(".loging-info .user-name").text(user.nickName);
				// 给用户名增加链接地址
				// 把当前用户的信息存放到界面上。
				$(".loging-info").data("userinfo", user);
				$(".loging-info .user-name").html(
						"<a target='_blank' href='" + myWorkUrl + "'>"
								+ user.nickName + "</a>");
				$(".loging-info .pic img").attr("src", user.avatarUrl);
				$(".loging-info").css("display", "block");
				$(".works").attr("href", myWorkUrl);
				$(".userinfos").attr("href",
						"http://www." + currentDomain + "/user/info");
				/* 取消息的定时器 */
				var msg_handler = function() {
					// 取消息通知
					$.getJSON("http://www." + currentDomain
							+ "/user/message/num/v1/" + user.userId
							+ "?callback=?", function(json) {
						if (json.message_num > 0
								&& $('.top-login .msg-num') != null) {
							$('.top-login .loging-box span.msg').html(
									"(" + json.message_num + ")").show();
							$('.top-login .msg-num').show();
						} else {
							$('.top-login .msg-num').hide();
						}
					});
					// 取消息通知结束
				}
				var timer = setInterval(msg_handler, 1000 * 60 * 2); // 2分钟取一次消息
				msg_handler();
				/* 取消息的定时器 end */
			} else {
				// 用户cookie里面的id为0。
				// groundhog.util.setCookie("tbsUserid", 0);
				$(".login-dialog").css("display", "block");
			}
		} else {
			// 用户cookie里面的id为0。
			// groundhog.util.setCookie("tbsUserid", 0);
			$(".login-dialog").css("display", "block");
			logoutCY();
			// 注释解释脚本方法，因为已经不需要同步登陆到论坛.
			// renderUCScript(data.script);
		}

		// 如果回调函数不为空,就回调
		if (groundhog != null && groundhog.check_login_callback != null) {
			groundhog.check_login_callback(data.user);
		}
		// 如果没有用户信息,或者用户信息登陆null
		if (data.result != true || data.user == null) {
			// 没有登录,而且有token,而且是注册参数
			var tempHref = location.href
			if (data.hasToken ) {
				if(tempHref.indexOf("showregister") > 0){
					$("#setup-name-dialog").modal();
				}else if(tempHref.indexOf("showwarning") > 0){
					alert("由于日后将会取消QQ/微博登陆方式,请使用YY方式登陆。造成不便，敬请谅解。");
				}
				
			}
		}
	});
	/**
	$(".login-dialog").hover(function() {
		//$(this).find(".login-list").css("display", "block");
	}, function() {
		//$(this).find(".login-list").css("display", "none");
	});**/

	$(".login-list a").click(function() {
		$(".login-list").css("display", "none");
	});
	// var textInput = $(".txtbox input");
	// if (textInput != null && textInput.length >0) {
	// //textInput.css("color", "#000");
	// textInput.placeholder();
	// }

	// 网站用户注销方法
	$(".loging-info .my-work-btn .close").click(
			function() {
				$.getJSON("http://www." + currentDomain
						+ "/oauth/logout?jsoncallback=?", {}, function(data) {
					if (data.result) {
						// 用户cookie里面的id为0。
						// groundhog.util.setCookie("tbsUserid", 0);
						logoutCY();
						// udb 注销
						if(data.oauthCookieDelUrl != null){
							UDB.sdk.PCWeb.deleteCrossmainCookieWithCallBack(data.oauthCookieDelUrl);
						}else{
							$.ajaxSetup({
								async : false,
								cache : false
							});
							$.getScript('/udb/logout');
							$.ajaxSetup({
								async : true
							});
						}
						$(".loging-info").css("display", "none");
						$(".login-dialog").css("display", "block");
						//延时执行页面reload，主要是为了udb推出登陆方法执行。
						setTimeout(function(){window.location.reload()},100);
						/*******************************************************
						 * 注释解释脚本方法，因为已经不需要同步登陆到论坛. renderUCScript(data.script,
						 * function() { $(".loging-info").css("display",
						 * "none"); $(".login-dialog").css("display", "block");
						 * window.location.reload(); });
						 ******************************************************/
					}
				});

			});
	// 用户名输入框回车事件.
	$("#setup-name-dialog .txtbox input").keydown(function(e) {
		if (e.keyCode == 13) {
			$("#setup-name-dialog .finish").click();
		}
	});
	$("#setup-name-dialog .finish")
			.click(
					(function() {
						var hasClicked = false;
						return function() {
							if (true == hasClicked) {
								return;
							}
							var groundhog_util = groundhog.util;
							var nickName = $.trim($('#setup-name-dialog .txtbox input').val());
							var nickName_helpText = $("#setup-name-dialog .txtbox-msg");
							nickName_helpText.text("注册中......");
							var length = nickName.length;
							if (groundhog_util.len_chinese(nickName) > 15) {
								nickName_helpText.text("亲,昵称过长。");
								return false;
							} else if (length > 0 && length < 3) {
								nickName_helpText.text("亲,昵称过短呢。");
								return false;
							} else if (length <= 0) {
								nickName_helpText.text("亲,请输入昵称。");
								return false;
							}

							var nRegExp = new RegExp(
									"\S*[a-zA-Z\u4e00-\u9fa5]+\S*");
							if (!nRegExp.test(nickName)) {
								nickName_helpText.text("请至少输入一个字符或者汉字");
								return false;
							}

							nRegExp = new RegExp(
									"^[\\-_a-z0-9A-Z\u4e00-\u9fa5]+$");
							if (!nRegExp.test(nickName)) {
								nickName_helpText.text("只允许中文,英文,下划线,分割线");
								return false;
							}

							$(this).attr("disabled", "disabled");
							hasClicked = true;
							$
									.getJSON(
											"http://www."
													+ currentDomain
													+ "/oauth/register?jsoncallback=?",
											{
												"nickName" : nickName
											},
											function(data) {
												if (data.result == false) {
													nickName_helpText
															.text(data.message);
												} else if (data.result) {
													function renderCallback() {
														// 注册成功，如果有传入需要跳转到得指定页面
														if (data.authoriezUrl != null) {
															// 跳转到需要授权访问的yemian
															window.location.href = data.authoriezUrl;
															return;
														}
														// 刷新页面
														// 刷新跨域登陆的页面.
														if (window.location.href
																.indexOf('www.'
																		+ currentDomain
																		+ '/oauth/cdlogin.html') >= 0) {
															try {
																document.domain = currentDomain;
																window.opener.document.location
																		.reload();
																window.close();
																return;
															} catch (e) {
																try {
																	console
																			.error(e);
																} catch (e) {
																}
															}
														}
														try {
															if (window.parent != null) {
																document.domain = currentDomain;
																if (window.parent.location.href
																		.indexOf('bbs.'
																				+ currentDomain) >= 0) {
																	window.parent.location
																			.reload();
																	// return;
																}
															}
														} catch (e) {
															try {
																console
																		.error(e);
															} catch (e) {
															}
														}
														if (data.sourceUrl != null) {
															// 跳转到点击登陆按钮的页面
															window.location.href = data.sourceUrl;
														} else {
															window.location
																	.reload();
														}
													}
													renderCallback();
													/**
													 * 注释解释脚本方法，因为已经不需要同步登陆到论坛. //
													 * 更新UC登陆信息 更新cookie
													 * renderUCScript(
													 * data.script,renderCallback);
													 */
												}
												hasClicked = false;
												return false;
											});
						}
					})());

	// 命名空间方法.主要使用与专区注册方法.
	var namespace = function() {
	};
	namespace.register = function(ns) {
		if (typeof (ns) != "string")
			return;
		ns = ns.split(".");
		var o, ni;
		for (var i = 0, len = ns.length; i < len, ni = ns[i]; i++) {
			try {
				o = (o ? (o[ni] = o[ni] || {}) : (eval(ni + "=" + ni + "||{}")))
			} catch (e) {
				o = eval(ni + "={}")
			}
		}
	};
	if (groundhog == null) {
		namespace.register("groundhog");
	}
	// 专区没有引入util的问题.
	if (groundhog.util == null || groundhog.util.len_chinese == null) {
		namespace.register("groundhog.util");
		groundhog.util.len_chinese = function(s) {
			var l = 0;
			var a = s.split("");
			for (var i = 0; i < a.length; i++) {
				if (/[\u4e00-\u9fa5]/.test(a[i])) {
					l += 2;
				} else {
					l++;
				}
			}
			return l;
		};
	}
	// 登陆的窗体的回调函数.
	namespace.register("groundhog.page.common");
	// 登陆的窗体的回调函数.
	groundhog.page.common.showRegisterDialog = function() {
		$.getJSON("http://www." + currentDomain
				+ "/oauth/userinfois?jsoncallback=?", function(data) {
			$.modal.close();
			if (data.result) {
				var user = data.user;
				$('#setup-name-dialog .txtbox input').val(user.nickName);
				$("#setup-name-dialog").modal();
			}
		});
	};
	// 选择登陆类型modal弹出.
	groundhog.page.common.showSelectTypeDialog = function() {
		// 如果注册跳回的页面，则不显示登录选择，而是继续后面的弹出修改昵称的操作
		window.location.href = "http://www.5253.com/oauth/cdlogin.html?callback=" + encodeURIComponent(window.location.href);
		/**if (document.location.href.indexOf('www.' + currentDomain) >= 0) {
			if (location.href.indexOf("showregister") > 0) {
				return;
			}
			$.modal.close();
			$("#select-login-type-frame").modal();
		} else {
			document.domain = currentDomain;
			window.open('http://www.' + currentDomain + '/oauth/cdlogin.html?callback' + encodeURIComponent(document.location.href));
		}**/
	};
	// 弹出模态窗口
	$(".login-btn").bind('click', groundhog.page.common.showSelectTypeDialog);
	$(".loging-info").hover(function() {
		var myWorkFlag = $(".my-work-sub");
		var myWorkDiv = $(".my-work-btn");
		myWorkDiv.css("display", "block");
		myWorkFlag.addClass("my-work-sup");
	}, function() {
		var myWorkFlag = $(".my-work-sub");
		var myWorkDiv = $(".my-work-btn");
		myWorkDiv.css("display", "none");
		myWorkFlag.removeClass("my-work-sup");
	});
	// 获取定制参数化的原来页面的url。
	var getCustomedUrl = function(obj) {
		var sourceurl = "";
		var attrRdUrl = $(obj).attr("redirecturl");
		if (attrRdUrl != null && attrRdUrl !== '') {
			sourceurl = attrRdUrl;
		} else {
			sourceurl = location.href;
		}
		return encodeURIComponent(sourceurl);
	};
	// 屏蔽qq登陆按钮,当登陆回调地址修改生效之后，该功能将会开放。
	// $(".user-login-weibo,.user-login-qq").css("display", "none");
	//屏蔽qq登陆按钮
	//$(".user-login-qq").css("display", "none");
	// QQ/微博登陆按钮点击handler
	$(".user-login-weibo").click(
			function() {
				groundhog.stat.trackEvent('tuboshu_topmenu', 'login_ciick');
				window.location.href = 'http://www.' + currentDomain
						+ '/oauth/weibo?sourceurl=' + getCustomedUrl($(this));
				return false;
			});
	$(".user-login-qq").click(
			function() {

				groundhog.stat.trackEvent('tuboshu_topmenu', 'login_ciick');
				window.location.href = 'http://www.' + currentDomain
						+ '/oauth/qq?sourceurl=' + getCustomedUrl($(this));
				return false;
			});

	// yy登陆按钮.
	$(".user-login-yy")
			.click(
					function() {
						groundhog.stat.trackEvent('tuboshu_topmenu',
								'login_ciick');
						var host = 'http://www.' + currentDomain;
						// var host = 'http://'+window.location.host;
						var url1 = host + '/udb/showlogin';

						var domain = null;
						if (document.domain != window.location.host
								&& (domain == undefined || domain == null)) {
							domain = document.domain;
						}

						var url2 = host
								+ '/udb/loginCallback?callback=kk_udb_login_callback';
						// 获取定制参数化的原来页面的url。
						var attrRdUrl = $(this).attr("redirecturl");
						if (attrRdUrl != null && attrRdUrl !== '') {
							url2 = url2 + "&sourceurl="
									+ encodeURIComponent(attrRdUrl);
						}
						if (domain != undefined && domain != null) {
							url2 = url2 + '&domain=' + domain;
						}

						var url3 = host + '/udb/cancellogin';
						if (domain != undefined && domain != null) {
							url3 = url3 + '?domain=' + domain;
						}

						UDB.sdk.PCWeb.popupOpenLgn(url1, url2, url3);
					});
	// yy登陆按钮.
	$(".user-binding-yy")
			.click(
					function() {
						groundhog.stat.trackEvent('tuboshu_topmenu',
								'login_ciick');
						var host = 'http://www.' + currentDomain;
						// var host = 'http://'+window.location.host;
						var url1 = host + '/udb/showlogin';

						var domain = null;
						if (document.domain != window.location.host
								&& (domain == undefined || domain == null)) {
							domain = document.domain;
						}

						var url2 = host
								+ '/udb/passbindinglogin?callback=kk_udb_login_callback';
						// 获取定制参数化的原来页面的url。
						var attrRdUrl = $(this).attr("redirecturl");
						if (attrRdUrl != null && attrRdUrl !== '') {
							url2 = url2 + "&sourceurl="
									+ encodeURIComponent(attrRdUrl);
						}
						if (domain != undefined && domain != null) {
							url2 = url2 + '&domain=' + domain;
						}

						var url3 = host + '/udb/cancellogin';
						if (domain != undefined && domain != null) {
							url3 = url3 + '?domain=' + domain;
						}

						UDB.sdk.PCWeb.popupOpenLgn(url1, url2, url3);
					});

	// 展示登陆界面.
	if (location.href.indexOf("showregister") > 0) {
		// $("#setup-name-dialog").modal();
	}
	// YY登陆成功回调
	groundhog.page.common.cdYYLogonCallback = function() {
		try {
			document.domain = currentDomain;
			window.opener.document.location.reload();
			window.close();
		} catch (e) {
			window.document.location.reload()
		}
	};
	// 专区搜索按钮handler
	var search_frame = $(".search-frame,.nav-search");
	if (search_frame.length > 0) {
		// ie 6 placeholder
		$(".search-frame input,.nav-search input").placeholder();
		// 我的世界专区搜索框动态.
		// 搜索按钮点击事件.
		$(".search-frame .srch-btn,.nav-search .search-btn").click(function() {
			$(".search-frame form,.nav-search form").submit();
		});
		$(".search-frame form,.nav-search form").submit(function(e) {
			var key = $(this).find("input[type='text']").val();
			if (key == null || $.trim(key) == '') {
				return false;
			}
			return true;
		});
	}
});
